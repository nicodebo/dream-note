#!/usr/bin/env bash

###############################################################################
#                          Script execution options                           #
###############################################################################

#set -o errexit    # exit when a command fails
#set -o pipefail
#set -o nounset    # exit when using undeclared variable
#set -o xtrace     # verbose

###############################################################################
#                               Main function                                 #
###############################################################################

# The main function contains variable definition and the getopts loop that
# allow to handle the command line arguments.
function main() {
    local __ScriptVersion="1"
    local SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
    local template=http://www.latextemplates.com/templates/books/2/book_2.zip
    local current_dir=$(pwd)
    local dotfile_name='dreamrc'
    if [ -z ${XDG_CONFIG_HOME+x} ] || [ -z "$XDG_CONFIG_HOME" ]; then
      local dotfile_path="${HOME}/.config/dreamnote/${dotfile_name}"
    else 
      local dotfile_path="${XDG_CONFIG_HOME}/dreamnote/${dotfile_name}"
    fi
    local tex_contents="contents"
    local -A today
    today[day]=$(date +"%d")
    today[month_number]=$(date +"%m")
    today[month_letter]=$(date +"%B")
    today[year]=$(date +"%Y")
    local -A var_name # Name of the dotfile variable
    var_name[dn_path]="dream_note_path"
    var_name[dn_name]="dream_note_name"
    local regex_date="^[0-9]{4}-(0[1-9]|1[0-2])-([0-2][0-9]|3[0-1])$"
    local py_stat_dir="${SCRIPT_DIR}/lib/dreamnote/stat.py"

    source "${SCRIPT_DIR}/lib/dreamnote/functions.sh"

    if [ -f "$dotfile_path" ]; then
        source "$dotfile_path"
    fi
    
    while getopts ":hi:aA:cs" opt
    do
      case $opt in
        i|init)
            initialize "$template" "$tex_contents" "$current_dir" "$dotfile_path" "$OPTARG" "${var_name[dn_path]}" "${var_name[dn_name]}"
            exit 0
            ;;
        a|add)
            for var in "${var_name[@]}"; do
                if [ -n "${!var}" ]; then
                    true
                else
                    echo "$var not set (or empty)"
                    echo "Could not create a new dream!"
                    exit 2
                fi
            done
            create_part_chapt "${today[day]}" "${today[month_number]}" "${today[month_letter]}" "${today[year]}" "${!var_name[dn_path]}" "${!var_name[dn_name]}" "$tex_contents"
            exit 0
            ;;
        A)
            for var in "${var_name[@]}"; do
                if [ -n "${!var}" ]; then
                    true
                else
                    echo "$var not set (or empty)"
                    echo "Could not create a new dream!"
                    exit 2
                fi
            done
            if [[ $OPTARG =~ $regex_date ]]; then
                today[day]=$(date -d "$OPTARG" '+%d')
                today[month_number]=$(date -d "$OPTARG" '+%m')
                today[month_letter]=$(date -d "$OPTARG" '+%B')
                today[year]=$(date -d "$OPTARG" '+%Y')
                create_part_chapt "${today[day]}" "${today[month_number]}" "${today[month_letter]}" "${today[year]}" "${!var_name[dn_path]}" "${!var_name[dn_name]}" "$tex_contents"
                true
            else
                echo "Bad date format ! See help for more informations"
            fi
            exit 0
            ;;
        c|compile)
            output_pdf "${!var_name[dn_path]}" "${!var_name[dn_name]}"
            exit 0
            ;;
        h|help)
            usage
            exit 0
            ;;
        s)
            for var in "${var_name[@]}"; do
                if [ -n "${!var}" ]; then
                    true
                else
                    echo "$var not set (or empty)"
                    echo "Could not create a new dream!"
                    exit 2
                fi
            done
            source `which virtualenvwrapper.sh` || exit 1
            workon dream-note
            "$py_stat_dir" "${!var_name[dn_path]}/${!var_name[dn_name]}/${tex_contents}" 
            deactivate
            exit 0
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit 1
            ;;
      esac
    done
    shift $(($OPTIND-1))
}

###############################################################################
#                                Launch Main                                  #
###############################################################################
main "$@"

# \usepackage[english]{babel} % Replace english by french ?
# voir les usepackage utilisé dans mon autre carnet de rêve.
# ecrire des tests avec bats pour prendre en main bats.
